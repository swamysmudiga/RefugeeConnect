openapi: 3.1.0
info:
  title: Refugee Stories and Resources API
  summary: CRUD operations for Refugee, Stories, Resources, and Donations
  version: 'v1.0'
paths:
  /refugee:
    get:
      tags:
        - Refugee
      summary: Get all refugee data
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Refugee'
        '500':
          description: Internal server error
  /refugee/login:
   post:
    tags:
      - Refugee
    summary: Login as a refugee
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoginUser'
    responses:
      '200':
        description: Successfully logged in
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Refugee'
      '401':
        description: Unauthorized - invalid credentials
      '500':
        description: Internal server error              
          
  /refugee/register:
    post:
      tags:
        - Refugee
      summary: Create a new refugee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Refugee'
      responses:
        '200':
          description: Refugee created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refugee'
        '404':
          description: refugee already registered!
        '500':
          description: Internal server error
  /refugee/{Id}:
    get:
      tags:
        - Refugee
      summary: Get all refugee data
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Refugee'
        '404':
          description: refugee not found!
        '500':
          description: Internal server error
    patch:
      tags:
        - Refugee
      summary: Update a refugee by ID
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Refugee'
      responses:
        '200':
          description: Refugee updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refugee'
        '404':
          description: refugee not found!
        '500':
          description: Internal server error
    delete:
      tags:
        - Refugee
      summary: Delete a refugee by ID
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Refugee deleted successfully
        '404':
          description: refugee not found!
        '500':
          description: Internal server error
  
  /user/login:
   post:
    tags:
      - User
    summary: Login as a refugee
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoginUser'
    responses:
      '200':
        description: Successfully logged in
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      '401':
        description: Unauthorized - invalid credentials
      '500':
        description: Internal server error   
        
  /user/register:
    post:
      tags:
        - User
      summary: Create a new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User all ready Exists!
        '500':
          description: Internal server error
 
  /user/{Id}:
    get:
      tags:
        - User
      summary: Get user data by ID
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: user not found!
        '500':
          description: Internal server error
    put:
      tags:
        - User
      summary: Update a user by ID
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found!
        '500':
          description: Internal server error
    delete:
      tags:
        - User
      summary: Delete a user by ID
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted successfully
        '404':
          description: User not found!
        '500':
          description: Internal server error
        
 
  /resources:
    get:
      tags:
        - Resource
      summary: Get all resources
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resource'
        '500':
          description: Internal server error
 
  /resources/{Id}:
    get:
      tags:
        - Resource
      summary: Get a resource by ID
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        '404':
          description: resource not found!
        '500':
          description: Internal server error
 
  /resource/register:
    post:
      tags:
        - Resource
      summary: Create a new resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Resource'
      responses:
        '200':
          description: Resource created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        '404':
          description: resource all ready Exists!
        '500':
          description: Internal server error
 
  /resource/{Id}:
    delete:
      tags:
        - Resource
      summary: Delete a resource by ID
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Resource deleted successfully
        '404':
          description: refugee not found!
        '500':
          description: Internal server error
    put:
      tags:
        - Resource
      summary: Update a resource by ID
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Resource'
      responses:
        '200':
          description: Resource updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        '404':
          description: Resource allready Exists!!
        '500':
          description: Internal server error
 
  /donations:
    get:
      tags:
        - Donation
      summary: Get all donations
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Donation'
        '404':
          description: Donations not found!
        '500':
          description: Internal server error
 
  /donation/{Id}/{userId}:
    get:
      tags:
        - Donation
      summary: Get a donation by ID and user ID
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Donation'
        '404':
          description: Donation not found!
        '500':
          description: Internal server error
 
  /donation:
    post:
      tags:
        - Donation
      summary: Create a new donation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Donation'
      responses:
        '200':
          description: Donation created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Donation'
        '500':
          description: Internal server error
 
  /camp:
    post:
      tags:
        - Camp
      summary: Create a new camp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Camp'
      responses:
        '200':
          description: Camp created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Camp'
        '404':
          description: camp all ready Exists!!
        '500':
          description: Internal server error
 
  /camp/{Id}:
    get:
      tags:
        - Camp
      summary: Get camp data by ID
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Camp'
        '404':
          description: camp not found!
        '500':
          description: Internal server error
 
    put:
      tags:
        - Camp
      summary: Update a camp by ID
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Camp'
      responses:
        '200':
          description: Camp updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Camp'
        '404':
          description: camp not found!
        '500':
          description: Internal server error
 
    delete:
      tags:
        - Camp
      summary: Delete a camp by ID
      parameters:
        - name: Id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Camp deleted successfully
        '404':
          description: camp not found!
        '500':
          description: Internal server error
 
components:
  schemas:
    LoginUser:
      type: object
      properties: 
        username:
          type: string
          examples:
            - refugee1
        password:
          type: string
          examples:
            - refugee@123
    Refugee:
      type: object
      properties:
        personid:
          type: integer
          format: int64
          examples:
            - 10
        ethnicity:
          type: string
          examples:
            - Asian
        religion:
          type: string
          examples:
            - Hindu
        language:
          type: string
          examples:
            - Spanish
        health:
          type: string
          examples:
            - BORKEN leg
        education:
          type: string
          examples:
            - Bachelor
        occupation:
          type: string
          examples:
            - Mechanic
        family_status:
          type: string
          examples:
            - Single
        has_dependents:
          type: string
          examples:
            - false
        previous_location:
          type: string
          examples:
            - Syria
        current_location:
          type: string
          examples:
            - America
        legal_status:
          type: string
          examples:
            - Asylum seeker
        assistance_needed:
          type: string
          examples:
            - housing
        name:
          type: string
          examples:
            - John Anthony
        age:
          type: integer
          examples:
            - 25
        nationality:
          type: string
          examples:
            - India
        gender:
          type: string
          examples:
            - Male
        dob:
          type: string
          format: date
          examples:
            - "1997-06-11"
        address:
          type: string
          examples:
            - Nashik
        phone_no:
          type: string
          examples:
            - "87654298761"
        email:
          type: string
          examples:
            - johnanthony@gmail.com
        blood_type:
          type: string
          examples:
            - A-
        height:
          type: number
          format: double
          examples:
            - 165.50
        weight:
          type: number
          format: double
          examples:
            - 80
        
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          examples:
            - 1
        name:
          type: string
          examples:
            - Akshay
        age:
          type: integer
          examples:
            - 20
        username:
          type: string
          examples:
            - akshay18
        password:
          type: string
          examples:
            - Password@123
        email:
          type: string
          examples:
            - akshay18@gmail.com
        contact_no:
          type: integer
          examples:
            - 9976542456
    
    Resource:
      type: object
      properties:
        id:
          type: integer
          format: int64
          examples:
            - 1
        name:
          type: string
          examples:
            - Food Distribution
        description:
          type: string
          examples:
            - Food Description 1
        location:
          type: string
          examples:
            - Boston
        isavailable:
          type: boolean
          examples:
            - true
 
    Donation:
      type: object
      properties:
        id:
          type: integer
          format: int64
          examples:
            - 1
        amount:
          type: number
          format: double
          examples:
            - 50.0
 
    Camp:
      type: object
      properties:
        donationid:
          type: integer
          format: int64
          examples:
            - 20
        personid:
          type: integer
          format: int64
          examples:
            - 40
        donationAmount:
          type: number  
          format: double   
          examples:
            - 2000.0